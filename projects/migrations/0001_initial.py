# Generated by Django 5.0.7 on 2024-08-19 20:18

import django.contrib.auth.models
import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Empresa',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codigo', models.CharField(max_length=6, unique=True, verbose_name='Código')),
                ('nome', models.CharField(max_length=200, verbose_name='Empresa')),
                ('created_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name_plural': 'Empresas',
            },
        ),
        migrations.CreateModel(
            name='Log',
            fields=[
                ('log_id', models.AutoField(primary_key=True, serialize=False)),
                ('processo', models.CharField(max_length=80, verbose_name='Rotina')),
                ('usuario', models.CharField(max_length=200, verbose_name='Nome')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='E-mail')),
                ('log_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name_plural': 'Logs',
            },
        ),
        migrations.CreateModel(
            name='Niveis',
            fields=[
                ('nivel_id', models.AutoField(primary_key=True, serialize=False)),
                ('descricao', models.CharField(max_length=200, verbose_name='Descrição')),
                ('rotina', models.CharField(choices=[('0', 'Todas'), ('1', 'Empresas'), ('2', 'Projetos'), ('3', 'Niveis'), ('4', 'Usuários'), ('5', 'Serviços'), ('6', 'Relatórios')], max_length=80, verbose_name='Rotina')),
                ('inclusao', models.CharField(choices=[('S', 'Sim'), ('N', 'Não')], max_length=1, verbose_name='Incluir')),
                ('edicao', models.CharField(choices=[('S', 'Sim'), ('N', 'Não')], max_length=1, verbose_name='Editar')),
                ('exclusao', models.CharField(choices=[('S', 'Sim'), ('N', 'Não')], max_length=1, verbose_name='Excluir')),
                ('logs', models.CharField(choices=[('S', 'Sim'), ('N', 'Não')], max_length=1, verbose_name='Logs')),
                ('filtro', models.CharField(choices=[('S', 'Sim'), ('N', 'Não')], max_length=1, verbose_name='Filtro')),
                ('active', models.BooleanField(default=True, verbose_name='Nível ativo ?')),
                ('created_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Projetos',
            fields=[
                ('codigo', models.CharField(max_length=8, primary_key=True, serialize=False, verbose_name='Código')),
                ('name', models.CharField(max_length=200, verbose_name='Descrição')),
                ('created_at', models.DateTimeField(auto_now=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('cliente', models.CharField(max_length=50, verbose_name='Cliente')),
                ('responsavel', models.CharField(max_length=50, verbose_name='Responsável')),
                ('arquiteto', models.CharField(max_length=50, verbose_name='Arquiteto')),
                ('data_inicio', models.DateField(verbose_name='Inicio')),
                ('data_entrega', models.DateField(verbose_name='Entrega')),
                ('desenvolvedor', models.CharField(max_length=50, verbose_name='Desenvolvedor')),
                ('status', models.CharField(choices=[('0', 'Orçamento'), ('1', 'Aprovado'), ('2', 'Iniciado'), ('3', 'Em Desenvolvimento'), ('4', 'Em Teste'), ('5', 'Em Homologação'), ('6', 'Homologado'), ('7', 'Em Produção'), ('8', 'Finalizado')], max_length=1, verbose_name='Status')),
            ],
            options={
                'verbose_name_plural': 'Projetos',
            },
        ),
        migrations.CreateModel(
            name='Servicos',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codigo', models.CharField(max_length=6, verbose_name='Código')),
                ('descricao', models.CharField(max_length=80, verbose_name='Descrição')),
                ('versao', models.CharField(max_length=3, verbose_name='Versão')),
                ('cliente', models.CharField(max_length=6, verbose_name='Cliente')),
                ('nomeCliente', models.CharField(max_length=80, verbose_name='Nome')),
                ('tipo', models.CharField(choices=[('pontual', 'Pontual'), ('sustentacao', 'Sustentação'), ('sd', 'Service Desk'), ('projeto', 'Projeto'), ('hradicional', 'Hora Adicional')], max_length=20, verbose_name='Tipo')),
                ('observacao', models.TextField(verbose_name='Observações')),
                ('created_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name_plural': 'Serviços',
            },
        ),
        migrations.CreateModel(
            name='Usuario',
            fields=[
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('user_id', models.IntegerField(primary_key=True, serialize=False)),
                ('firstname', models.CharField(max_length=20, verbose_name='Primeiro Nome')),
                ('name', models.CharField(max_length=200, verbose_name='Nome Completo')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='E-mail')),
                ('password', models.CharField(max_length=30, verbose_name='Senha')),
                ('password2', models.CharField(max_length=30, verbose_name='Confirmação da Senha')),
                ('active', models.BooleanField(default=True, verbose_name='Usuário ativo ?')),
                ('tipo', models.CharField(choices=[('1', 'Colaborador'), ('2', 'Cliente')], max_length=1, verbose_name='Tipo')),
                ('resetpsw', models.BooleanField(default=True, verbose_name='Altera Senha ?')),
                ('usefilter', models.BooleanField(default=True, verbose_name='Permite o uso de Filtros ?')),
                ('created_at', models.DateTimeField(auto_now=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
                ('perfil', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='projects.niveis')),
            ],
            options={
                'verbose_name_plural': 'Usuários',
                'ordering': ('name',),
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
